--- a/net/minecraft/world/entity/EntityExperienceOrb.java
+++ b/net/minecraft/world/entity/EntityExperienceOrb.java
@@ -22,6 +22,14 @@
 import net.minecraft.world.phys.AxisAlignedBB;
 import net.minecraft.world.phys.Vec3D;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRemoveEvent;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.player.PlayerExpCooldownChangeEvent;
+// CraftBukkit end
+
 public class EntityExperienceOrb extends Entity {
 
     private static final int LIFETIME = 6000;
@@ -65,6 +73,7 @@
     @Override
     public void tick() {
         super.tick();
+        EntityHuman prevTarget = this.followingPlayer;// CraftBukkit - store old target
         this.xo = this.getX();
         this.yo = this.getY();
         this.zo = this.getZ();
@@ -90,7 +99,22 @@
             this.followingPlayer = null;
         }
 
-        if (this.followingPlayer != null) {
+        // CraftBukkit start
+        boolean cancelled = false;
+        if (this.followingPlayer != prevTarget) {
+            EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this, followingPlayer, (followingPlayer != null) ? EntityTargetEvent.TargetReason.CLOSEST_PLAYER : EntityTargetEvent.TargetReason.FORGOT_TARGET);
+            EntityLiving target = (event.getTarget() == null) ? null : ((org.bukkit.craftbukkit.entity.CraftLivingEntity) event.getTarget()).getHandle();
+            cancelled = event.isCancelled();
+
+            if (cancelled) {
+                followingPlayer = prevTarget;
+            } else {
+                followingPlayer = (target instanceof EntityHuman) ? (EntityHuman) target : null;
+            }
+        }
+
+        if (this.followingPlayer != null && !cancelled) {
+            // CraftBukkit end
             Vec3D vec3d = new Vec3D(this.followingPlayer.getX() - this.getX(), this.followingPlayer.getY() + (double) this.followingPlayer.getEyeHeight() / 2.0D - this.getY(), this.followingPlayer.getZ() - this.getZ());
             double d0 = vec3d.lengthSqr();
 
@@ -115,7 +139,7 @@
 
         ++this.age;
         if (this.age >= 6000) {
-            this.discard();
+            this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
         }
 
     }
@@ -184,7 +208,7 @@
     private void merge(EntityExperienceOrb entityexperienceorb) {
         this.count += entityexperienceorb.count;
         this.age = Math.min(this.age, entityexperienceorb.age);
-        entityexperienceorb.discard();
+        entityexperienceorb.discard(EntityRemoveEvent.Cause.MERGE); // CraftBukkit - add Bukkit remove cause
     }
 
     private void setUnderwaterMovement() {
@@ -206,7 +230,7 @@
             this.markHurt();
             this.health = (int) ((float) this.health - f);
             if (this.health <= 0) {
-                this.discard();
+                this.discard(EntityRemoveEvent.Cause.DEATH); // CraftBukkit - add Bukkit remove cause
             }
 
             return true;
@@ -233,17 +257,17 @@
     public void playerTouch(EntityHuman entityhuman) {
         if (!this.level().isClientSide) {
             if (entityhuman.takeXpDelay == 0) {
-                entityhuman.takeXpDelay = 2;
+                entityhuman.takeXpDelay = CraftEventFactory.callPlayerXpCooldownEvent(entityhuman, 2, PlayerExpCooldownChangeEvent.ChangeReason.PICKUP_ORB).getNewCooldown(); // CraftBukkit - entityhuman.takeXpDelay = 2;
                 entityhuman.take(this, 1);
                 int i = this.repairPlayerItems(entityhuman, this.value);
 
                 if (i > 0) {
-                    entityhuman.giveExperiencePoints(i);
+                    entityhuman.giveExperiencePoints(CraftEventFactory.callPlayerExpChangeEvent(entityhuman, i).getAmount()); // CraftBukkit - this.value -> event.getAmount()
                 }
 
                 --this.count;
                 if (this.count == 0) {
-                    this.discard();
+                    this.discard(EntityRemoveEvent.Cause.PICKUP); // CraftBukkit - add Bukkit remove cause
                 }
             }
 
@@ -256,9 +280,17 @@
         if (entry != null) {
             ItemStack itemstack = (ItemStack) entry.getValue();
             int j = Math.min(this.xpToDurability(i), itemstack.getDamageValue());
+            // CraftBukkit start
+            org.bukkit.event.player.PlayerItemMendEvent event = CraftEventFactory.callPlayerItemMendEvent(entityhuman, this, itemstack, entry.getKey(), j);
+            j = event.getRepairAmount();
+            if (event.isCancelled()) {
+                return i;
+            }
+            // CraftBukkit end
 
             itemstack.setDamageValue(itemstack.getDamageValue() - j);
             int k = i - this.durabilityToXp(j);
+            this.value = k; // CraftBukkit - update exp value of orb for PlayerItemMendEvent calls
 
             return k > 0 ? this.repairPlayerItems(entityhuman, k) : 0;
         } else {
@@ -283,6 +315,24 @@
     }
 
     public static int getExperienceValue(int i) {
+        // CraftBukkit start
+        if (i > 162670129) return i - 100000;
+        if (i > 81335063) return 81335063;
+        if (i > 40667527) return 40667527;
+        if (i > 20333759) return 20333759;
+        if (i > 10166857) return 10166857;
+        if (i > 5083423) return 5083423;
+        if (i > 2541701) return 2541701;
+        if (i > 1270849) return 1270849;
+        if (i > 635413) return 635413;
+        if (i > 317701) return 317701;
+        if (i > 158849) return 158849;
+        if (i > 79423) return 79423;
+        if (i > 39709) return 39709;
+        if (i > 19853) return 19853;
+        if (i > 9923) return 9923;
+        if (i > 4957) return 4957;
+        // CraftBukkit end
         return i >= 2477 ? 2477 : (i >= 1237 ? 1237 : (i >= 617 ? 617 : (i >= 307 ? 307 : (i >= 149 ? 149 : (i >= 73 ? 73 : (i >= 37 ? 37 : (i >= 17 ? 17 : (i >= 7 ? 7 : (i >= 3 ? 3 : 1)))))))));
     }
 
